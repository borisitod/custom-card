!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.CKEditor5=t():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.custom_card_card=t())}(self,(()=>(()=>{var e={"ckeditor5/src/core.js":(e,t,i)=>{e.exports=i("dll-reference CKEditor5.dll")("./src/core.js")},"ckeditor5/src/ui.js":(e,t,i)=>{e.exports=i("dll-reference CKEditor5.dll")("./src/ui.js")},"ckeditor5/src/widget.js":(e,t,i)=>{e.exports=i("dll-reference CKEditor5.dll")("./src/widget.js")},"dll-reference CKEditor5.dll":e=>{"use strict";e.exports=CKEditor5.dll}},t={};function i(a){var l=t[a];if(void 0!==l)return l.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,i),n.exports}i.d=(e,t)=>{for(var a in t)i.o(t,a)&&!i.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var a={};return(()=>{"use strict";i.d(a,{default:()=>c});var e=i("ckeditor5/src/core.js"),t=i("ckeditor5/src/widget.js");class l extends e.Command{execute(e={}){const t=this.editor;t.model.document.selection;t.model.change((i=>{const a=i.createElement("customCard",{title:e.title||"",mediaId:e.mediaId||"",link:e.link||""});t.model.insertContent(a),i.setSelection(i.createPositionAfter(a))}))}refresh(){const e=this.editor.model,t=e.document.selection,i=e.schema.findAllowedParent(t.getFirstPosition(),"customCard");this.isEnabled=null!==i}}class n extends e.Command{execute(e={}){e.modelElement&&this.editor.model.change((t=>{t.setAttributes({title:e.title||"",link:e.link||"",mediaId:e.mediaId||""},e.modelElement),t.setSelection(t.createRangeOn(e.modelElement))}))}refresh(){const e=this.editor.model.document.selection.getSelectedElement();this.isEnabled=e&&"customCard"===e.name}}class r extends e.Plugin{static get pluginName(){return"CardEditing"}static get requires(){return[t.Widget]}init(){this._defineSchema(),this._defineConverters(),this._defineCommands(),this._defineClickHandler()}_defineSchema(){this.editor.model.schema.register("customCard",{isObject:!0,allowWhere:"$text",allowContentOf:"$block",allowAttributes:["title","mediaId","link"]})}_defineConverters(){const e=this.editor.conversion;e.for("upcast").elementToElement({model:(e,{writer:t})=>t.createElement("customCard",{title:e.getAttribute("data-title")||"",mediaId:e.getAttribute("data-media-id")||"",link:e.getAttribute("data-link")||""}),view:{name:"div",classes:"custom-card"}}),e.for("editingDowncast").elementToElement({model:"customCard",view:(e,{writer:i})=>{const a=e.getAttribute("title")||"",l=e.getAttribute("link")||"",n=e.getAttribute("mediaId")||"",r=i.createContainerElement("div",{class:"custom-card","data-title":a,"data-link":l,"data-media-id":n}),d=i.createContainerElement("div",{class:"custom-card-content"}),s=i.createContainerElement("div",{class:"custom-card-title"});i.insert(i.createPositionAt(s,0),i.createText(a));const o=i.createContainerElement("div",{class:"custom-card-link"});return i.insert(i.createPositionAt(o,0),i.createText(l)),i.insert(i.createPositionAt(d,0),s),i.insert(i.createPositionAt(d,"end"),o),i.insert(i.createPositionAt(r,0),d),(0,t.toWidget)(r,i,{label:"custom card widget",hasSelectionHandle:!0})}}),e.for("dataDowncast").elementToElement({model:"customCard",view:(e,{writer:t})=>t.createEmptyElement("div",{class:"custom-card","data-title":e.getAttribute("title")||"","data-link":e.getAttribute("link")||"","data-media-id":e.getAttribute("mediaId")||""})})}_defineCommands(){this.editor.commands.add("insertCard",new l(this.editor)),this.editor.commands.add("editCard",new n(this.editor))}_defineClickHandler(){this.editor.editing.view.document.on("click",((e,t)=>{const i=t.target;if(i.hasClass("custom-card")||i.findAncestor((e=>e.hasClass("custom-card")))){const a=this.editor.editing.mapper.toModelElement(i.findAncestor((e=>e.hasClass("custom-card")))||i);a&&(e.stop(),t.preventDefault(),this._showEditDialog(a))}}))}_showEditDialog(e){const t=this.editor,i=e.getAttribute("title")||"",a=e.getAttribute("link")||"",l=e.getAttribute("mediaId")||"",n=jQuery(`\n    <div class="card-dialog-form">\n        <div class="js-form-item form-item">\n            <label class="form-item__label">${Drupal.t("Title")}</label>\n            <input type="text" class="form-element form-text" id="card-title" value="${i}" />\n        </div>\n        <div class="js-form-item form-item">\n            <label class="form-item__label">${Drupal.t("Link")}</label>\n            <input type="text"\n                   id="card-link"\n                   class="form-element linkit-widget"\n                   value="${a}"\n                   autocomplete="off"\n                   aria-autocomplete="list" />\n            <div class="linkit-result-wrapper" style="display: none;"></div>\n        </div>\n        <div class="js-form-item form-item">\n            <label class="form-item__label">${Drupal.t("Media")}</label>\n            <div class="js-media-library-widget media-library-widget">\n                <div class="js-media-library-selection media-library-selection">\n                    ${l?`<div class="media-library-item__name">Media ID: ${l}</div>`:""}\n                </div>\n                <input type="hidden"\n                       id="card-media"\n                       name="media"\n                       class="js-media-library-widget-value"\n                       value="${l||""}"\n                />\n                <button type="button"\n                        class="js-media-library-open-button button"\n                        data-media-library-widget="true"\n                        data-media-library-allowed-types="image"\n                >${Drupal.t("Add media")}</button>\n            </div>\n        </div>\n    </div>\n`),r=n.find("#card-link"),d=n.find(".linkit-result-wrapper");let s=null;r.on("input",(function(){const e=jQuery(this).val();e.length<3?d.hide():(s&&s.abort(),s=jQuery.ajax({url:"/linkit/autocomplete/default",data:{q:e},success:function(e){if(e.suggestions&&e.suggestions.length>0){let t='<ul class="linkit-ui-autocomplete">';e.suggestions.forEach((function(e){t+=`\n                                <li class="linkit-result-item" data-path="${e.path}">\n                                    <div class="linkit-result-line">\n                                        <div class="linkit-result-title">${e.label}</div>\n                                        <div class="linkit-result-description">${e.description||""}</div>\n                                        ${e.group?`<div class="linkit-result-group">${e.group}</div>`:""}\n                                    </div>\n                                </li>\n                            `})),t+="</ul>",d.html(t).show()}else d.hide()}}))})),n.on("click",".linkit-result-item",(function(){const e=jQuery(this).data("path");r.val(e),d.hide()})),r.on("keydown",(function(e){const t=d.find(".linkit-result-item"),i=t.filter(".highlighted");switch(e.keyCode){case 40:e.preventDefault(),0===i.length?t.first().addClass("highlighted"):i.removeClass("highlighted").next().addClass("highlighted");break;case 38:e.preventDefault(),0===i.length?t.last().addClass("highlighted"):i.removeClass("highlighted").prev().addClass("highlighted");break;case 13:e.preventDefault(),i.length&&i.trigger("click");break;case 27:e.preventDefault(),d.hide()}})),jQuery(document).on("click",(function(e){jQuery(e.target).closest(".linkit-result-wrapper").length||jQuery(e.target).is(r)||d.hide()}));const o=n.find(".js-media-library-open-button");$(once("media-library-opener",o)).on("click",(function(e){e.preventDefault();const t=new URLSearchParams({media_library_opener_id:"media_library.opener.editor","media_library_allowed_types[0]":"image",media_library_selected_type:"image",media_library_remaining:"1","media_library_opener_parameters[filter_format_id]":"rtf",_wrapper_format:"drupal_modal"}),i=$(this)[0],a={url:`/media-library?${t.toString()}`,element:i,progress:{type:"throbber"},dialogType:"modal",dialog:{width:"85%",title:Drupal.t("Add or select media"),dialogClass:"media-library-widget-modal"},submit:{_drupal_ajax:"1"}};Drupal.ajax(a).execute(),$(window).once("media-library-selection").on("dialog:messageInsert",(function(e,t){if(t&&t.mediaEntities&&t.mediaEntities.length){const e=t.mediaEntities[0];n.find("#card-media").val(e.id),n.find(".js-media-library-selection").html(`\n                <div class="media-library-item__name">${e.name}</div>\n            `)}}))}));const c=Drupal.dialog(n,{title:Drupal.t("Edit Card"),buttons:[{text:Drupal.t("Save"),class:"button--primary",click:function(){const i=n.find("#card-title").val(),a=n.find("#card-link").val(),l=n.find("#card-media").val();t.model.change((n=>{const r=n.createElement("customCard",{title:i,link:a,mediaId:l});t.model.insertContent(r,t.model.createRangeOn(e)),n.remove(e)})),c.close()}},{text:Drupal.t("Cancel"),click:function(){c.close()}}],width:"500px",beforeClose:!1,class:["ui-dialog-buttons","card-dialog"]});c.showModal()}}var d=i("ckeditor5/src/ui.js");class s extends e.Plugin{init(){this.editor.ui.componentFactory.add("custom_card_card",(e=>{const t=new d.ButtonView(e);return t.set({label:Drupal.t("Add Card"),icon:'<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">\n  <path d="M2 2h16v16H2z"/>\n</svg>\n',tooltip:!0}),t.on("execute",(()=>{this._showCardDialog()})),t}))}_showCardDialog(){const e=this.editor,t=jQuery(`\n            <div class="card-dialog-form">\n                <div class="js-form-item form-item">\n                    <label class="form-item__label">${Drupal.t("Title")}</label>\n                    <input type="text" class="form-element form-text" id="card-title" />\n                </div>\n                <div class="js-form-item form-item">\n                    <label class="form-item__label">${Drupal.t("Link")}</label>\n                    <input type="text"\n                           id="card-link"\n                           class="form-element linkit-widget"\n                           autocomplete="off"\n                           aria-autocomplete="list" />\n                    <div class="linkit-result-wrapper" style="display: none;"></div>\n                </div>\n                <div class="js-form-item form-item">\n                    <label class="form-item__label">${Drupal.t("Media")}</label>\n                    <input type="hidden" id="card-media" />\n                    <div class="media-library-selection"></div>\n                    <input type="button" class="button js-media-library-open-button" value="${Drupal.t("Add media")}" />\n                </div>\n            </div>\n        `),i=t.find("#card-link"),a=t.find(".linkit-result-wrapper");let l=null;i.on("input",(function(){const e=jQuery(this).val();e.length<3?a.hide():(l&&l.abort(),l=jQuery.ajax({url:"/linkit/autocomplete/default",data:{q:e},success:function(e){if(e.suggestions&&e.suggestions.length>0){let t='<ul class="linkit-ui-autocomplete">';e.suggestions.forEach((function(e){t+=`\n                                <li class="linkit-result-item" data-path="${e.path}">\n                                    <div class="linkit-result-line">\n                                        <div class="linkit-result-title">${e.label}</div>\n                                        <div class="linkit-result-description">${e.description||""}</div>\n                                        ${e.group?`<div class="linkit-result-group">${e.group}</div>`:""}\n                                    </div>\n                                </li>\n                            `})),t+="</ul>",a.html(t).show()}else a.hide()}}))})),t.on("click",".linkit-result-item",(function(){const e=jQuery(this).data("path");i.val(e),a.hide()})),i.on("keydown",(function(e){const t=a.find(".linkit-result-item"),i=t.filter(".highlighted");switch(e.keyCode){case 40:e.preventDefault(),0===i.length?t.first().addClass("highlighted"):i.removeClass("highlighted").next().addClass("highlighted");break;case 38:e.preventDefault(),0===i.length?t.last().addClass("highlighted"):i.removeClass("highlighted").prev().addClass("highlighted");break;case 13:e.preventDefault(),i.length&&i.trigger("click");break;case 27:e.preventDefault(),a.hide()}})),jQuery(document).on("click",(function(e){jQuery(e.target).closest(".linkit-result-wrapper").length||jQuery(e.target).is(i)||a.hide()}));const n=t.find(".js-media-library-open-button"),r=t.find(".media-library-selection"),d=t.find("#card-media");n.on("click",(()=>{Drupal.ajax({url:"/media-library/select",dialogType:"modal",dialog:{width:"85%",title:Drupal.t("Add or select media")}}).execute(),jQuery(window).on("dialog:messageInsert",(function(e,t){t.hasOwnProperty("mediaId")&&(d.val(t.mediaId),r.html(`<div>Media ID: ${t.mediaId}</div>`))}))}));const s=Drupal.dialog(t,{title:Drupal.t("Add Card"),buttons:[{text:Drupal.t("Insert"),class:"button--primary",click:function(){const i=e.commands.get("insertCard");i.isEnabled&&i.execute({title:t.find("#card-title").val(),mediaId:t.find("#card-media").val(),link:t.find("#card-link").val()}),s.close()}},{text:Drupal.t("Cancel"),click:function(){s.close()}}],width:"500px",beforeClose:!1,class:["ui-dialog-buttons","card-dialog"]});s.showModal()}}class o extends e.Plugin{static get requires(){return[r,s]}static get pluginName(){return"CustomCardCard"}}const c={CustomCardCard:o}})(),a=a.default})()));